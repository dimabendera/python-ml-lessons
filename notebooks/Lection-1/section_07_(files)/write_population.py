# Якщо ви новачок в обробці файлів, обов'язково перевірте with_open.py спочатку!
# Ви також захочете ознайомитися з read_text.py перед цим прикладом.
# Ви також захочете ознайомитися з read_csv.py перед цим прикладом.
# Цей трохи більш просунутий і будується на read_csv.py.

with open('read_csv.csv', 'r') as states_file:
    
    # Замість того, щоб залишати вміст файлу як рядок, ми розбиваємо файл на список
    # у кожному новому рядку та зберігаємо цей список у станах змінних
    states = states_file.read().split("\n")
    
    # Оскільки це електронна таблиця у форматі значень, розділених комами (CSV),
    # ми можемо розглядати стани як список рядків.
    # Але нам також потрібно буде розділити стовпці на список!

    for index, state in enumerate(states):
        states[index] = state.split(",")

# Тепер у нас є вкладений список з усією інформацією!
# Замість того, щоб друкувати інформацію, як у read_csv.py, давайте збережемо її до нового файлу.

with open('states_pop.txt', 'w') as population_file:
    # У рядку 20 ми створюємо файл аналогічно відкриттю файлу
    # — єдина відмінність полягає в прапорці запису (другий параметр)
    # Рядок 20 створює нову змінну під назвою population_file, яка є файловим об'єктом.

    # .read() - це метод файлу, з яким ми вже добре знайомі, але є також .write()

    # .write() - це файловий метод, який дозволяє нам записати рядок у файл.

    # Наш рядок заголовка знаходиться на state[0],
    # тому ми можемо використовувати його для гарнішого відображення інформації.
    for state in states[1:]:  # Ми використовуємо [1:], тому пропускаємо рядок заголовка.

        # state[0] – це перший стовпець у рядку, який містить ім'я штату.
        population_file.write("\n---{0}---\n".format(state[0]))
        # Замість того, щоб друкувати рядок, ми записуємо рядок у файл.

        for index, info in enumerate(state[1:]):  # Ми використовуємо [1:], щоб не повторювати назву штату.
            population_file.write("{0}:\t{1}\n".format(states[0][index+1], info))
            # Замість того, щоб друкувати рядок, ми записуємо рядок у файл.

# Зауважте, що нам довелося додати деякі додаткові нові рядки порівняно з read_csv.py;
# під час друку Python щедрий на нові рядки.
# Але коли ви пишете у файл, Python не припускає, що вам потрібні ці нові рядки, і вам доведеться додати їх у себе.
