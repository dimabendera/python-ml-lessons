"""

1) Напишіть функцію invert_dict, яка приймає словник і повертає інвертований словник,
   де ключі та значення міняються місцями. Наприклад, для {1: "a", 2: "b"}, функція поверне {"a": 1, "b": 2}.

2) Створіть функцію unique_elements, яка приймає два списки і повертає список унікальних елементів,
   які зустрічаються в обох списках. Використовуйте множини для рішення цього завдання.

3) Напишіть функцію swap_tuple, яка приймає кортеж з двох елементів і повертає кортеж, де елементи помінялися місцями.

4) Створіть функцію count_elements, яка приймає список кортежів.
   Кожен кортеж має два елементи: ключ і значення. Функція повинна повертати словник,
   де ключі — це унікальні ключі з кортежів, а значення — це сума значень кортежів для кожного ключа.
   Наприклад, для [(1, 10), (2, 20), (1, 5)], функція поверне {1: 15, 2: 20}.
"""

import time

factorial = lambda num: 1 if(num == 1) else num*factorial(num-1)


def time_decorator(func):
    def inner(*args, **kwargs):
        begin = time.time()
        func(*args, **kwargs)
        end = time.time()
        print(f"This func takes :{end - begin}")
    return inner


@time_decorator
def calculate(func, number):
    print(func(number))


calculate(factorial, 100)
