"""

1) Створіть функцію max_number з трьома параметрами, яка порівнює ці числа і повертає найбільше з них.
   Виконайте цю функцію для різних наборів чисел, щоб переконатися, що вона працює правильно.
   Ускладнення - з довільним числом

2) Створіть функцію about_me, яка використовує **kwargs і виводить інформацію, передану в якості ключових аргументів.
   Наприклад, about_me(name="Іван", age=30, hobby="футбол") повинна вивести інформацію про Івана.


3) Напишіть рекурсивну функцію для обчислення факторіалу числа.
   Назвіть її calculate_factorial і перевірте її роботу, використовуючи декілька різних чисел.


4) Створіть лямбда-функцію, яка приймає число і повертає його квадрат. Призначте цю лямбда-функцію змінній square.
   Викличіть цю лямбда-функцію для числа і виведіть результат.


5) Напишіть функцію apply_operation, яка приймає іншу функцію в якості аргументу (операцію) та число.
   apply_operation повинна застосовувати передану операцію до числа і повертати результат.
   Перевірте її, передавши різні функції, такі як додавання або множення.


6) Створіть декоратор time_it, який вимірює час виконання функції і виводить його.
   Декоруйте декілька різних функцій цим декоратором і перевірте, скільки часу вони займають.
   Написати параметризований декоратор, який буде приймати іменований аргумент,
   який буде відповідати чи виводити в секундах значення часу (як зараз), чи в мілісекундах

7) Написати параметризований декоратор, який буде приймати іменований аргумент,
   який буде відповідати чи виводити в секундах значення часу (як зараз), чи в мілісекундах
"""


