"""
Назва завдання: Розробка модуля конфігурацій для проекту Python

Мета завдання: Покращити розуміння студентом принципів проектування та архітектури програмного забезпечення через створення гнучкого та ефективного модуля конфігурацій.

Завдання:

Вивчення теоретичних основ:

Дослідити, що таке конфігураційні файли та яку роль вони відіграють у проекті.
Ознайомитись з різними форматами конфігураційних файлів (JSON, YAML, INI тощо).
Планування:

Визначити основні параметри, які будуть управлятися через модуль конфігурацій (наприклад, параметри бази даних, налаштування логування, ключі API).
Скласти план реалізації, включно з структурою модуля і способом інтеграції в загальний проект.


Розробка:

Створити шаблон конфігураційного файлу у вибраному форматі.
Написати модуль Python, який буде зчитувати дані з конфігураційного файлу, валідувати їх та надавати доступ до цих параметрів іншим частинам програми.
Додати можливості Використовувати Різні частини конфігурування для різних середовищ (production, dev, test і т.д.)
Підключення одних конфігураційних файлів інших.
Міняти параметри за допомогою параметрів (Наприклад app.port=5000)
Реалізувати систему винятків для обробки помилок при зчитуванні конфігурацій.
Тестування та налагодження:

Написати юніт-тести для перевірки коректності зчитування параметрів та обробки помилок.
Перевірити роботу модуля на практичному прикладі, інтегрувавши його в більший проект.
Документування:

Створити документацію до модуля, описуючи його функціональність, способи використання та приклади конфігураційних файлів.


Рефлексія та самооцінка:

Проаналізувати, що було зроблено, визначити сильні та слабкі сторони реалізації.
Подумати над можливими шляхами удосконалення модуля.
Очікувані результати:
Студент навчиться створювати модульні, масштабовані та легко конфігуруємі компоненти програмного забезпечення, а також покращить свої навички в плануванні та документуванні проектів.


Ресурси для допомоги:

Офіційна документація Python по роботі з файлами конфігурацій.
Матеріали по основам архітектури програмного забезпечення та принципам проектування.


"""